// Code generated by go-swagger; DO NOT EDIT.

package data_history

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetDirectV1SahamDpEqHandlerFunc turns a function with the right signature into a get direct v1 saham dp eq handler
type GetDirectV1SahamDpEqHandlerFunc func(GetDirectV1SahamDpEqParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDirectV1SahamDpEqHandlerFunc) Handle(params GetDirectV1SahamDpEqParams) middleware.Responder {
	return fn(params)
}

// GetDirectV1SahamDpEqHandler interface for that can handle valid get direct v1 saham dp eq params
type GetDirectV1SahamDpEqHandler interface {
	Handle(GetDirectV1SahamDpEqParams) middleware.Responder
}

// NewGetDirectV1SahamDpEq creates a new http.Handler for the get direct v1 saham dp eq operation
func NewGetDirectV1SahamDpEq(ctx *middleware.Context, handler GetDirectV1SahamDpEqHandler) *GetDirectV1SahamDpEq {
	return &GetDirectV1SahamDpEq{Context: ctx, Handler: handler}
}

/* GetDirectV1SahamDpEq swagger:route GET /direct/v1/saham/dp/eq/ Data History getDirectV1SahamDpEq

Get Data History

Get Rasio Keuangan Data based on provided parameters.

*/
type GetDirectV1SahamDpEq struct {
	Context *middleware.Context
	Handler GetDirectV1SahamDpEqHandler
}

func (o *GetDirectV1SahamDpEq) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetDirectV1SahamDpEqParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetDirectV1SahamDpEqOKBody get direct v1 saham dp eq o k body
//
// swagger:model GetDirectV1SahamDpEqOKBody
type GetDirectV1SahamDpEqOKBody struct {

	// bottom
	Bottom *GetDirectV1SahamDpEqOKBodyBottom `json:"bottom,omitempty"`

	// changes
	Changes []*GetDirectV1SahamDpEqOKBodyChangesItems0 `json:"changes"`
}

// Validate validates this get direct v1 saham dp eq o k body
func (o *GetDirectV1SahamDpEqOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBottom(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateChanges(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDirectV1SahamDpEqOKBody) validateBottom(formats strfmt.Registry) error {
	if swag.IsZero(o.Bottom) { // not required
		return nil
	}

	if o.Bottom != nil {
		if err := o.Bottom.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getDirectV1SahamDpEqOK" + "." + "bottom")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getDirectV1SahamDpEqOK" + "." + "bottom")
			}
			return err
		}
	}

	return nil
}

func (o *GetDirectV1SahamDpEqOKBody) validateChanges(formats strfmt.Registry) error {
	if swag.IsZero(o.Changes) { // not required
		return nil
	}

	for i := 0; i < len(o.Changes); i++ {
		if swag.IsZero(o.Changes[i]) { // not required
			continue
		}

		if o.Changes[i] != nil {
			if err := o.Changes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getDirectV1SahamDpEqOK" + "." + "changes" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getDirectV1SahamDpEqOK" + "." + "changes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get direct v1 saham dp eq o k body based on the context it is used
func (o *GetDirectV1SahamDpEqOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateBottom(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateChanges(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDirectV1SahamDpEqOKBody) contextValidateBottom(ctx context.Context, formats strfmt.Registry) error {

	if o.Bottom != nil {

		if swag.IsZero(o.Bottom) { // not required
			return nil
		}

		if err := o.Bottom.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getDirectV1SahamDpEqOK" + "." + "bottom")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getDirectV1SahamDpEqOK" + "." + "bottom")
			}
			return err
		}
	}

	return nil
}

func (o *GetDirectV1SahamDpEqOKBody) contextValidateChanges(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Changes); i++ {

		if o.Changes[i] != nil {

			if swag.IsZero(o.Changes[i]) { // not required
				return nil
			}

			if err := o.Changes[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getDirectV1SahamDpEqOK" + "." + "changes" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getDirectV1SahamDpEqOK" + "." + "changes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDirectV1SahamDpEqOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDirectV1SahamDpEqOKBody) UnmarshalBinary(b []byte) error {
	var res GetDirectV1SahamDpEqOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetDirectV1SahamDpEqOKBodyBottom get direct v1 saham dp eq o k body bottom
//
// swagger:model GetDirectV1SahamDpEqOKBodyBottom
type GetDirectV1SahamDpEqOKBodyBottom struct {

	// average
	Average float64 `json:"Average,omitempty"`

	// change
	Change float64 `json:"Change,omitempty"`

	// difference
	Difference int64 `json:"Difference,omitempty"`

	// highest
	Highest int64 `json:"Highest,omitempty"`

	// last update
	LastUpdate string `json:"LastUpdate,omitempty"`

	// lowest
	Lowest int64 `json:"Lowest,omitempty"`
}

// Validate validates this get direct v1 saham dp eq o k body bottom
func (o *GetDirectV1SahamDpEqOKBodyBottom) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get direct v1 saham dp eq o k body bottom based on context it is used
func (o *GetDirectV1SahamDpEqOKBodyBottom) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDirectV1SahamDpEqOKBodyBottom) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDirectV1SahamDpEqOKBodyBottom) UnmarshalBinary(b []byte) error {
	var res GetDirectV1SahamDpEqOKBodyBottom
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetDirectV1SahamDpEqOKBodyChangesItems0 get direct v1 saham dp eq o k body changes items0
//
// swagger:model GetDirectV1SahamDpEqOKBodyChangesItems0
type GetDirectV1SahamDpEqOKBodyChangesItems0 struct {

	// change
	Change float64 `json:"Change,omitempty"`

	// close
	Close int64 `json:"Close,omitempty"`

	// date
	Date string `json:"Date,omitempty"`

	// freq
	Freq int64 `json:"Freq,omitempty"`

	// high
	High int64 `json:"High,omitempty"`

	// low
	Low int64 `json:"Low,omitempty"`

	// open
	Open int64 `json:"Open,omitempty"`

	// val
	Val int64 `json:"Val,omitempty"`

	// vol
	Vol int64 `json:"Vol,omitempty"`
}

// Validate validates this get direct v1 saham dp eq o k body changes items0
func (o *GetDirectV1SahamDpEqOKBodyChangesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get direct v1 saham dp eq o k body changes items0 based on context it is used
func (o *GetDirectV1SahamDpEqOKBodyChangesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetDirectV1SahamDpEqOKBodyChangesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDirectV1SahamDpEqOKBodyChangesItems0) UnmarshalBinary(b []byte) error {
	var res GetDirectV1SahamDpEqOKBodyChangesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
